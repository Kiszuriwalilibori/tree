{"version":3,"sources":["components/AppendItemButton.tsx"],"names":["Button","props","string","primary","initAppend","useDispatchAction","className","onClick","AppendItemButton","React"],"mappings":"8FAAA,iCAiBMA,EAAS,SAACC,GACZ,IAAQC,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,QACRC,EAAeC,cAAfD,WAER,OACI,wBACIE,UAAWH,EAAU,iBAAmB,mBACxCI,QAAS,WACLH,EAAWF,IAEf,aAAW,gBALf,SAOI,qBAAKI,UAAU,qBAKrBE,EAAmBC,OAAWT,GACrBQ","file":"static/js/5.03a003b9.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\nimport useDispatchAction from '../hooks/useDispatchAction';\r\nimport PropTypes from 'prop-types';\r\n\r\ninterface ButtonProps {\r\n    string: string;\r\n    primary: boolean;\r\n}\r\n\r\n/**\r\n * Renders the button which initializes creation of new node\r\n * @param initAppend the function which does the job\r\n * @param {string} string   indicates node (its text content) to be created\r\n * @param {boolean} primary defines whether givennode is primary(directly in main tree) or not\r\n * @returns button component\r\n */\r\nconst Button = (props: ButtonProps) => {\r\n    const { string, primary } = props;\r\n    const { initAppend } = useDispatchAction();\r\n\r\n    return (\r\n        <button\r\n            className={primary ? 'append-primary' : 'append-secondary'}\r\n            onClick={() => {\r\n                initAppend(string);\r\n            }}\r\n            role-label=\"append-button\"\r\n        >\r\n            <div className=\"append__cross\"></div>\r\n        </button>\r\n    );\r\n};\r\n\r\nconst AppendItemButton = React.memo(Button);\r\nexport default AppendItemButton;\r\n\r\nButton.propTypes = {\r\n    string: PropTypes.string,\r\n    primary: PropTypes.bool,\r\n};\r\n"],"sourceRoot":""}