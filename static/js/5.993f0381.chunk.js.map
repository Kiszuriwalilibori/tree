{"version":3,"sources":["components/AppendItemButton.tsx"],"names":["AppendItemButton","connect","dispatch","onClick","data","initAppend","React","memo","props","string","primary","click","useCallback","e","className","role-label"],"mappings":"8FAAA,2CAiCMA,EAAmBC,YAAQ,MAJN,SAACC,GAAD,MAAqE,CAC9FC,QAAS,SAACC,GAAD,OAAwBF,EAASG,YAAWD,QAG9BH,CAAkCK,IAAMC,MApBlD,SAACC,GAAwB,IAC9BL,EAA6BK,EAA7BL,QAASM,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,QACnBC,EAAQC,uBACZ,SAACC,GACCV,EAAQM,KAEV,CAACN,EAASM,IAGZ,OACE,4BAAQK,UAAWJ,EAAU,iBAAmB,mBAAoBP,QAASQ,EAAOI,aAAW,iBAC7F,yBAAKD,UAAU,uBAUNd","file":"static/js/5.993f0381.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { initAppend } from \"../redux/input\";\r\nimport { useCallback } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n//type ButtonProps = { onClick:Function,string:string, primary:boolean };\r\ninterface ButtonProps {\r\n  onClick: Function;\r\n  string: string|string[];\r\n  primary: boolean;\r\n}\r\n\r\nconst Button = (props: ButtonProps) => {\r\n  const { onClick, string, primary } = props;\r\n  const click = useCallback(\r\n    (e: React.MouseEvent<HTMLButtonElement>): void => {\r\n      onClick(string);\r\n    },\r\n    [onClick, string]\r\n  );\r\n\r\n  return (\r\n    <button className={primary ? \"append-primary\" : \"append-secondary\"} onClick={click} role-label=\"append-button\">\r\n      <div className=\"append__cross\"></div>\r\n    </button>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: (arg0: { payload: string[]; type: string; }) => void) => ({\r\n  onClick: (data:string[]):void => dispatch(initAppend(data)),\r\n});\r\n\r\nconst AppendItemButton = connect(null, mapDispatchToProps)(React.memo(Button));\r\nexport default AppendItemButton;\r\n\r\nButton.propTypes ={\r\n  onClick: PropTypes.func,\r\n  string: PropTypes.string,\r\n  primary: PropTypes.bool,\r\n}\r\n"],"sourceRoot":""}